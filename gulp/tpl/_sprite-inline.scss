//===========================================
// Sprite Definition
//===========================================

// ATTENTION!!
// This file is autogenerated do not edit it manually!!!


// Vars
//===========================================



${{common}}-map: (
  {{#shapes}}
  {{common}}-{{name}}-width: {{width.outer}}px,
  {{common}}-{{name}}-height: {{height.outer}}px{{^last}},{{/last}}
  {{/shapes}}
);


{{#shapes}}.{{common}}-{{name}} {
  width: {{width.outer}}px;
  height: {{height.outer}}px;
}
{{/shapes}}


// Icon Mixin
//===========================================

@mixin {{common}}($add-style: false) {
  @if $add-style {
    display: inline-block;
    vertical-align: middle;
    font-style: normal;
    position: relative;
  }
}

%{{common}} {
  background-image: url("{{{cssPath}}}{{{sprite}}}");
}

@mixin extend-{{common}}-url($extend: true) {
  @if $extend {
    @extend %{{common}};
  }
}


// Common Styles
//===========================================

.{{common}} {
  @include {{common}}(true);
  @include extend-{{common}}-url(true);
}


// Mixins & classes
//===========================================

{{#shapes}}
@mixin {{common}}-{{name}}($add-style: true, $add-url: true) {
  @include {{common}}($add-style);
  @include extend-{{common}}-url($add-url);
  width: {{width.outer}}px;
  height: {{height.outer}}px;
}

.{{common}}-{{name}} {
  @include {{common}}-{{name}}(false, false);
}


{{/shapes}}


// Scale Icon
//============================================

@mixin scale-icon($name, $width, $round: "round") {
  $w: $name + "-width";
  $w: map-get($i-map, $w);
  $h: $name + "-height";
  $h: map-get($i-map, $h);
  $height: $width / $w * $h;
  @if $round == "round" {
    $height: round($height);
  }
  @if $round == "ceil" {
    $height: ceil($height);
  }
  @if $round == "floor" {
    $height: floor($height);
  }
  @include size($width, $height);
}

// Alias
@mixin iscale($name, $width, $round: "round") {
  @include scale-icon($name, $width);
}


